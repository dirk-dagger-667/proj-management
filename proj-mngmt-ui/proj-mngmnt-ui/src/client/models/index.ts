/* @ts-nocheck */
/* eslint-disable */
/* @noformat */
/* @formatter:off */
/**
 * Generated by ng-openapi
 * Generated TypeScript interfaces from Swagger specification
 * Do not edit this file manually
 */
import { HttpContext, HttpHeaders } from '@angular/common/http';
export interface AuditEntryDto {
  id?: string;
  auditType?: AuditType;
  metadata?: string | null;
  createdAt?: Date;
}

export enum AuditType {
  Added = 0,
  Updated = 1,
  Removed = 2,
}

export interface AuditHistoryResponse {
  count?: number;
  audits?: AuditEntryDto[];
}

export interface GetTasksResponse {
  totalCount?: number;
  tasks?: Array<TaskListItem>;
}

export interface HttpValidationProblemDetails {
  type?: string | null;
  title?: string | null;
  status?: number | null;
  detail?: string | null;
  instance?: string | null;
  errors?: Record<string, Array<string>>;
}

export enum Priority {
  Low = 0,
  Normal = 1,
  High = 2,
  Critical = 3,
}

export interface ProjectDto {
  id?: string;
  title?: string | null;
}

export enum Status {
  ToDo = 0,
  InProgress = 1,
  ReadyForTest = 2,
  Done = 3,
}

export interface TaskItemDto {
  id?: string;
  projectId?: string;
  type?: TaskType;
  title?: string | null;
  description?: string | null;
  assignee?: string | null;
  priority?: Priority;
  status?: Status;
  estimate?: number;
  createdAt?: Date | null;
  concurrencyToken?: string;
}

export interface TaskListItem {
  id?: string;
  title?: string | null;
  status?: Status;
}

export enum TaskType {
  Story = 0,
  Bug = 1,
}

/** Request Options for Angular HttpClient requests */
export interface RequestOptions<TResponseType extends 'arraybuffer' | 'blob' | 'json' | 'text'> {
  headers?: HttpHeaders;
  reportProgress?: boolean;
  responseType?: TResponseType;
  withCredentials?: boolean;
  context?: HttpContext;
}
